const CACHE_NAME="my-pwa-cache-v1",urlsToCache=["/","/src/index.html","/src/styles/style.css","/src/styles/transition.css","/src/index.js","/src/router.js","/public/images/icon.png","/public/images/marker-icon.png","/public/manifest.json","/public/service-worker.js"];self.addEventListener("push",(function(e){const n=e.data.json(),s={body:n.options.body,icon:"/public/images/icon.png",badge:"/public/images/marker-icon.png"};e.waitUntil(self.registration.showNotification(n.title,s))})),self.addEventListener("install",(function(e){console.log("Service Worker: Install event triggered"),e.waitUntil(caches.open(CACHE_NAME).then((function(e){return console.log("Caching files..."),e.addAll(urlsToCache).then((()=>{console.log("Files successfully cached")})).catch((e=>{console.error("Caching failed for these URLs:",urlsToCache),console.error("Error:",e)}))})))})),self.addEventListener("activate",(function(e){const n=[CACHE_NAME];e.waitUntil(caches.keys().then((function(e){return Promise.all(e.map((function(e){if(!n.includes(e))return console.log("Deleting old cache:",e),caches.delete(e)})))})))})),self.addEventListener("fetch",(function(e){e.respondWith(caches.match(e.request).then((function(n){return n||fetch(e.request)})).catch((e=>(console.error("Fetch failed:",e),new Response("Offline or fetch error",{status:503,statusText:"Service Unavailable",headers:{"Content-Type":"text/plain"}})))))}));